# Common configuration.
[user]
	name = Gustaf Waldemarson
	email = gustaf.waldemarson@gmail.com
[url "git+ssh://xaldew@git.launchpad.net/"]
	insteadof = lp:
[url "git+ssh://xaldew@git.launchpad.net/~xaldew/+git/"]
	insteadof = lpme:
[core]
	excludesfile = ~/.gitignore
[branch]
	autosetuprebase = always
[svn]
	rmdir = true
[push]
	default = simple
[pull]
	rebase = true
[color]
	branch = auto
	statue = auto
	diff   = auto
[alias]
	git = !exec git
	root = rev-parse --show-toplevel
	ap = annex proxy -- git
	ad = add
	co = checkout
	st = status
	sts = status -s
	ci = commit
	br = branch
	cl = clone
	cp = cherry-pick
	clang = clang-format
	cloner = clone --recursive
	dlc = diff --cached HEAD^
	unstage = reset HEAD --
	last = log -1 HEAD
	hist = log --pretty=format:\"%h %ad  | %s%d [%an]\" --graph --date=short
	lol = log --graph --decorate --pretty=oneline --abbrev-commit
	lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
	about = "!f() { \
	  git config branch.${1:-$(git symbolic-ref --short --quiet HEAD)}.description; \
	}; f"
	sub-pull = "!f() { \
	  cd $1 && \
	  git checkout master && \
	  git pull && \
	  git submodule update --init --recursive ; \
	}; f"
	pull-all = pull --recurse-submodules
	pulla = pull --recurse-submodules
	dif = diff --word-diff
	wdiff = diff --word-diff
	wdif = diff --word-diff
	list-alias = "!git config -l | grep alias | cut -c 7-"
	la = !git list-alias
	help = !git list-alias
	stap = "!git stash && git pull && git stash pop"
	sl = stash list
	sa = stash apply
	ss = stash save
	distclean = "!f() { \
	  git submodule foreach --recursive git clean -xfd && \
	  git submodule foreach --recursive git reset --hard && \
	  git clean -xfd && \
	  git reset --hard && \
	  git submodule update --init --recursive ; \
	}; f"
	clone-mirror = "!f() { \
	  git clone --mirror $1 $(basename $1)/.git && \
	  cd $(basename $1) && \
	  git config --bool core.bare false && \
	  git checkout master ; \
	}; f"
	unbare = "!f() { \
	  mkdir -p .git && \
	  mv branches config description HEAD hooks info objects refs .git && \
	  git config --bool core.bare false && \
	  git checkout master ; \
	}; f"

# Unix-specific configuration.
[core]
	editor = emacsclient --tty --socket-name=default --alternate-editor=\"\" "$@"
[merge]
	tool = ediff
[mergetool "ediff"]
	cmd = emacsclient --tty --alternate-editor=\"\" --eval \"(ediff-merge-files-with-ancestor \\\"$LOCAL\\\" \\\"$REMOTE\\\" \\\"$BASE\\\" nil \\\"$MERGED\\\")\"
[magit]
	hideCampaign = true
