# -*- mode: gdb-script -*-
python
import os
import re
import sys
import os.path
import textwrap
import gdb.types
import gdb.printing

home          = os.environ.get("HOME", "~")
default_path  = os.path.join(home, "git", "installs")
objects_dir   = os.environ.get("objects_dir", default_path)
gdb_addons    = os.path.join(objects_dir, "gdb_addons")
python_addons = os.path.join(gdb_addons, "gdb_python_stl")
ue4_addons    = os.path.join(home, ".config", "Epic", "GDBPrinters")

if os.path.isdir(python_addons):
  sys.path.insert(0, python_addons)
  from libstdcxx.v6.printers import register_libstdcxx_printers

stl_script = os.path.join(gdb_addons, "gdb_stl_views.gdb")
if os.path.exists(stl_script):
  gdb.execute(stl_script)

if os.path.isdir(ue4_addons):
  sys.path.append(ue4_addons)
  from UE4Printers import register_ue4_printers
  print("Registered pretty printers for UE4 classes")


class StdArrayPrinter:
  def __init__(self, val):
    self.val = val

  def to_string(self):
    s = "{} {}".format(self.val.type, textwrap.fill(str(self.val["_M_elems"])))
    return re.sub(" +", " ", s)

def build_array_pp():
    pp = gdb.printing.RegexpCollectionPrettyPrinter("array_lib")
    pp.add_printer('std::array', '^std::array<.+>$', StdArrayPrinter)
    return pp

gdb.printing.register_pretty_printer(gdb.current_objfile(), build_array_pp())

end

define print_vector
    if $argc == 2
        set $elem = $arg0.size()
        if $arg1 >= $arg0.size()
            printf "Error, %s.size() = %d, printing last element:\n", "$arg0", $arg0.size()
            set $elem = $arg1 -1
        end
        print *($arg0._M_impl._M_start + $elem)@1
    else
        print *($arg0._M_impl._M_start)@$arg0.size()
    end
end

document print_vector
Display vector contents
Usage: print_vector VECTOR_NAME INDEX
VECTOR_NAME is the name of the vector
INDEX is an optional argument specifying the element to display
end

# Don't pause on long output.
set height unlimited
set width unlimited
set pagination off

# Turn on various print options.
set print array on
set print pretty on
set print union on
set print demangle on
set print asm-demangle on
set print vtbl on
set print object on
set print symbol on

set max-completions 1000
set demangle-style auto
set complaints 0
set language auto
set history save on
set history size unlimited
set history remove-duplicates unlimited

show directories
