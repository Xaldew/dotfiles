# -*- mode: gdb-script -*-
python
import os
import re
import sys
import os.path
import textwrap
import gdb.types
import gdb.printing

home          = os.environ.get("HOME", "~")
default_path  = os.path.join(home, "git", "installs")
objects_dir   = os.environ.get("objects_dir", default_path)
gdb_addons    = os.path.join(objects_dir, "gdb_addons")
python_addons = os.path.join(gdb_addons, "gdb_python_stl")

if os.path.isdir(python_addons):
  sys.path.insert(0, python_addons)
  from libstdcxx.v6.printers import register_libstdcxx_printers

stl_script = os.path.join(gdb_addons, "gdb_stl_views.gdb")
if os.path.exists(stl_script):
  gdb.execute(stl_script)


class StdArrayPrinter:
  def __init__(self, val):
    self.val = val

  def to_string(self):
    s = "{} {}".format(self.val.type, textwrap.fill(str(self.val["_M_elems"])))
    return re.sub(" +", " ", s)

def build_array_pp():
    pp = gdb.printing.RegexpCollectionPrettyPrinter("array_lib")
    pp.add_printer('std::array', '^std::array<.+>$', StdArrayPrinter)
    return pp

gdb.printing.register_pretty_printer(gdb.current_objfile(), build_array_pp())

end

# Don't pause on long output.
set height unlimited
set width unlimited
set pagination off

# Turn on various print options.
set print array on
set print pretty on
set print union on
set print demangle on
set print asm-demangle on
set print vtbl on
set print object on
set print symbol on

set max-completions 1000
set demangle-style auto
set complaints 0
set language auto
set history save on
set history size unlimited
set history remove-duplicates unlimited

show directories
