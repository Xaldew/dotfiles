;; Do not display the menu-bar.
(menu-bar-mode 0)


;; Set some global keybindings.
(global-set-key [f10] 'compile)
(global-set-key [f9] 'global-linum-mode)
(global-set-key [f8] 'global-font-lock-mode)
(global-set-key [f7] 'global-hl-line-mode)
(global-set-key "\C-h" 'backward-delete-char)
(global-set-key "\M-h" 'backward-kill-word)

;; Disable some commands.
(put 'downcase-region 'disabled nil)
(put 'upcase-region 'disabled nil)

;; Set the default fill-column.
(setq-default fill-column 80)

;; Fix dictionaries for Aspell.
(setq ispell-program-name "aspell")
(setq ispell-process-directory (expand-file-name "~/"))
(setq ispell-personal-dictionary (expand-file-name "~/.dicts/personal.dict"))
(setq ispell-extra-args '("--sug-mode=ultra"))
(setq ispell-dictionary "english")
(setq ispell-list-command "list")

;; Automatically follow symlink without prompting.
(setq vc-follow-symlinks t)

;; Set the colour theme to something better. (emacs 24+)
;;(load-theme 'tango-dark t)

;; Add mode association for files.
(add-to-list 'auto-mode-alist '("emacs\\'" . emacs-lisp-mode))
(add-to-list 'auto-mode-alist '("bashrc\\'" . shell-script-mode))
(add-to-list 'auto-mode-alist '("bash_aliases\\'" . shell-script-mode))
(add-to-list 'auto-mode-alist '("\\.cl\\'" . c-mode))

;; Activate xclip addon.
(setq load-path (cons (expand-file-name "~/.emacs.d/xclip") load-path))
(require 'xclip)
(xclip-mode 1)


;; Activate cmake mode for editting cmake files.
(setq load-path (cons (expand-file-name "~/.emacs.d/emacs-cmake-project") load-path))
(require 'cmake-mode)
(setq auto-mode-alist
      (append '(("CMakeLists\\.txt\\'" . cmake-mode)
		("\\.cmake\\'" . cmake-mode)
		("CMakeLists\\'" . cmake-mode))
	      auto-mode-alist))

;; Activate utilities to work with cmake.
(require 'cmake-project)
(defun maybe-cmake-project-hook ()
  (if (file-exists-p "CMakeLists.txt") (cmake-project-mode)))
(add-hook 'c-mode-hook 'maybe-cmake-project-hook)
(add-hook 'c++-mode-hook 'maybe-cmake-project-hook)


;; Activate linum for neat line- and column numbers.
(require 'linum)
(global-linum-mode 1)
(setq linum-format "%5d ")
(setq flyspell-issue-welcome-flag nil)
(setq line-number-mode t)
(setq column-number-mode t)


;; Activate Ethan whitespace fixer.
(add-to-list 'load-path (expand-file-name "~/.emacs.d/ethan-wspace/lisp"))
(require 'ethan-wspace)
(global-ethan-wspace-mode 1)
(set-default 'ethan-wspace-errors (remove 'tabs ethan-wspace-errors))

;; Activate autopairs addon. I.e. enable autopair in all buffers.
;;(add-to-list 'load-path (expand-file-name "~/.emacs.d/autopair"))
;;(require 'autopair)
;;(autopair-global-mode)

;; Activate graphviz-dot-mode.
(add-to-list 'load-path (expand-file-name "~/.emacs.d/graphviz-dot-mode"))
(require 'graphviz-dot-mode)

;; Activate whitespace: mark lines longer than 80 columns.
(require 'whitespace)
(setq whitespace-style '(face empty lines-tail trailing))
(global-whitespace-mode t)


;; Place all backups in system temp instead.
(setq backup-directory-alist
      `((".*" . ,temporary-file-directory)))
(setq auto-save-file-name-transforms
      `((".*" ,temporary-file-directory t)))


;; Activate UTF-8 coding for almost everything.
(prefer-coding-system       'utf-8)
(set-default-coding-systems 'utf-8)
(set-terminal-coding-system 'utf-8)
(set-keyboard-coding-system 'utf-8)
(setq default-buffer-file-coding-system 'utf-8)
(setq x-select-request-type '(UTF8_STRING COMPOUND_TEXT TEXT STRING))


;; CODING STYLES

;; C
;; Add recommended functions for smarter formatting for linux coding c-style.
(defun c-lineup-arglist-tabs-only (ignored)
  "Line up argument lists by tabs, not spaces"
  (let* ((anchor (c-langelem-pos c-syntactic-element))
	 (column (c-langelem-2nd-pos c-syntactic-element))
	 (offset (- (1+ column) anchor))
	 (steps (floor offset c-basic-offset)))
    (* (max steps 1)
       c-basic-offset)))

(add-hook 'c-mode-common-hook
	  (lambda ()
	    ;; Add kernel style
	    (c-add-style
	     "linux-tabs-only"
	     '("linux" (c-offsets-alist
			(arglist-cont-nonempty
			 c-lineup-gcc-asm-reg
			 c-lineup-arglist-tabs-only))))))
(add-hook 'c-mode-hook
          (lambda ()
	    ;; Enable kernel mode for the appropriate files
	    (setq indent-tabs-mode t)
	    (c-set-style "linux-tabs-only")))

;; C++
;; Fix mode for header files.
;;(require 'cl)

(defun file-in-directory-list-p (file dirlist)
  "Returns true if the file specified is contained within one of
the directories in the list. The directories must also exist."
  (let ((dirs (mapcar 'expand-file-name dirlist))
	(filedir (expand-file-name (file-name-directory file))))
    (and
     (file-directory-p filedir)
     (member-if (lambda (x) ; Check directory prefix matches
		  (string-match (substring x 0 (min(length filedir) (length x))) filedir))
		dirs))))

(defun buffer-standard-include-p ()
  "Returns true if the current buffer is contained within one of
the directories in the INCLUDE environment variable."
  (and (getenv "INCLUDE")
       (file-in-directory-list-p buffer-file-name (split-string (getenv "INCLUDE") path-separator))))

;; C++ Style.
(c-add-style "my-style"
	     '("stroustrup"
	       (indent-tabs-mode . nil)        ; use spaces rather than tabs
	       (c-basic-offset . 4)            ; indent by four spaces
	       (c-offsets-alist . ((inline-open . 0)  ; custom indentation rules
				   (brace-list-open . 0)
				   (statement-case-open . +)))))

(defun my-c++-mode-hook ()
  (c-set-style "my-style")        ; use my-style defined above
  (auto-fill-mode)
  (c-toggle-auto-hungry-state 1))

(add-hook 'c++-mode-hook 'my-c++-mode-hook)
(add-to-list 'magic-fallback-mode-alist '(buffer-standard-include-p . c++-mode))

;; This function indents and cleans up the whole buffer.
(defun iwb ()
  "indent whole buffer"
  (interactive)
  (delete-trailing-whitespace)
  (indent-region (point-min) (point-max) nil))


;; Fix LaTeX settings and AucTeX.
(setq TeX-auto-save t)
(setq TeX-parse-self t)
(setq-default TeX-master nil)

(add-hook 'LaTeX-mode-hook 'visual-line-mode)
(add-hook 'LaTeX-mode-hook 'flyspell-mode)
(add-hook 'LaTeX-mode-hook 'LaTeX-math-mode)

(add-hook 'LaTeX-mode-hook 'turn-on-reftex)
(setq reftex-plug-into-AUCTeX t)

;; CUSTOM COMMANDS
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(inhibit-startup-screen t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(font-lock-comment-face ((((class color) (min-colors 8) (background dark)) (:foreground "red")))))
